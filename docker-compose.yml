version: '3.9'
services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      write-db:
        condition: service_healthy
      read-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      - CONFIG_FILE=/root/config.yaml
    volumes:
      - ./logs:/app/logs
      - ./migrations:/root/migrations
      - ./:/app/data

  write-db:
    image: postgres:13
    environment:
      POSTGRES_DB: promotions_write
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d promotions_write"]
      interval: 5s
      timeout: 5s
      retries: 5

  read-db:
    image: postgres:13
    environment:
      POSTGRES_DB: promotions_read
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d promotions_read"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'